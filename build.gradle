plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'com.github.spotbugs' version "2.0.0"
}

group 'seedu.duke'
version '0.2.0'

repositories {
    mavenCentral()
}

application {
    // Change this to your main class.
    mainClassName = 'duke.Launcher'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.0'
}

checkstyle {
    toolVersion = '8.23'
}

spotbugs {
    excludeFilter = file("$projectDir/config/spotbugs/excludeFilter.xml")
}

test {
    useJUnitPlatform()
}

task runCli(type: JavaExec, dependsOn: classes) {
    main = 'duke.Launcher'
    description = 'Run Duke CLI'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
    args = ['cli']
}

task runGui(type: JavaExec, dependsOn: classes) {
    main = 'duke.Launcher'
    description = 'Run Duke GUI'
    classpath = sourceSets.main.runtimeClasspath
    args = ['gui']
}

shadowJar {
    archiveBaseName = 'duke'
    archiveVersion = '0.2.0'
    archiveClassifier = null
    archiveAppendix = null
}

javafx {
    version = '11.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

task textUiTest(type: Exec) {
    description = 'Runs text UI tests'
    group = 'verification'
    shouldRunAfter test

    workingDir "$projectDir/text-ui-test"
    commandLine 'bash', '-c', './runtest.sh'
}

test.dependsOn textUiTest
