package duke;import java.io.FileWriter;import java.nio.file.Files;import java.nio.file.Paths;import java.util.ArrayList;import java.util.List;/** * Represents the task list in duke. */public class TaskList {	public static int missionnum = 0;	/**	 * Duke can create only one list for users.	 */	public static List<Mission> missionlist = new ArrayList<>();	public TaskList() {	}	public String printAllEvent() {		int counter = 1;		String ans = "";		for(counter = 1; counter < missionlist.size() + 1; counter += 1) {			ans += counter + ". " + missionlist.get(counter - 1).toString();		}		return ans;	}	public String printEvent(int index) {		return missionlist.get(index).toString();	}	public void addEventWithTime(String str, String type, String time, String atby) {		missionlist.add(new Mission(str, type, time, atby));		missionnum += 1;	}	public void addEventWithoutTime(String str, String type) {		missionlist.add(new Mission(str, type));		missionnum += 1;	}	public void changeEvent(int index) {		missionlist.get(index).changeState();	}	public void deleteMission(int index) {		missionlist.remove(index);		missionnum -= 1;	}	public String printLastEvent() {		String ans = "";		ans = missionlist.get(missionlist.size() - 1).toString();		return ans;	}	public void deleteAll() {		for(; missionnum > 0; missionnum--) {			missionlist.remove(missionnum - 1);		}		missionnum = 0;	}	public String findEvent(String keyword) {		String findresult = "";		for(int i = 0; i < missionnum; i += 1) {			if(missionlist.get(i).content.contains(keyword)) {			    findresult += (i + 1) + ". " + missionlist.get(i).toString();			}		}		return findresult;	}	public void saveToFile() {		try {			FileWriter fw = new FileWriter("duke.txt");			for (Mission a : missionlist) {				int x = a.state.contentEquals("âœ—") ? 0 : 1;				String str = a.type + "|" + x + "|" + a.content + (a.time==null ? "" : ("|" + a.time)) + "\n";				fw.write(str);			}			fw.close();		} catch (Exception e) {			System.out.println(e);		}	}	public void readFromFile() {		String path = "duke.txt";		try {			int i = 0;			List<String> contents = Files.readAllLines(Paths.get(path));			for(i = 0; i < contents.size(); i += 1) {				missionlist.add(Mission.newMission(contents.get(i)));				missionnum += 1;			}		} catch (Exception e) {			System.out.println(e);		}	}}